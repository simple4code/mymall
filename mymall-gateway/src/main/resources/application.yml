spring:
  cloud:
    nacos:
      discovery:
        # nacos-server地址配置
        server-addr: 127.0.0.1:8848
    # 配置网关规则
    gateway:
      routes:
        - id: test_route # 每个路由都需指定唯一 id
          uri: https://www.baidu.com # 路由到的 url
          # 断言规则
          predicates:
            - Query=url,baidu # 如果请求参数url=baidu，则路由通过

        - id: qq_route
          uri: https://www.qq.com
          predicates:
            - Query=url,qq # 如果请求参数url=qq，则路由通过

        - id: product_route
          uri: lb://mymall-product
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}

        - id: third_party_route
          uri: lb://mymall-third-party
          predicates:
            - Path=/api/thirdparty/**
          filters:
            - RewritePath=/api/thirdparty/(?<segment>.*),/$\{segment}

        - id: ware_route
          uri: lb://mymall-ware
          predicates:
            - Path=/api/ware/**
          filters:
            - RewritePath=/api/(?<segment>.*),/$\{segment}

        # 越模糊的路由应该越放在后面
        - id: admin_route
          uri: lb://renren-fast # lb 代表负载均衡
          predicates:
            - Path=/api/** # 根据路径进行断言，这里带api前缀的url都会被路由到 renren-fast
          filters:
            # 由于上面的断言只是单纯将路径转向renren-fast，所以这里需要重写下路径，带上后面的请求
            - RewritePath=/api/(?<segment>.*),/renren-fast/$\{segment}

        - id: mymall_host_route
          uri: lb://mymall-product # lb 代表负载均衡
          predicates:
            - Host=mymall.com,item.mymall.com

        - id: mymall_auth_route
          uri: lb://mymall-auth-server # lb 代表负载均衡
          predicates:
            - Host=auth.mymall.com

        - id: mymall_cart_route
          uri: lb://mymall-cart
          predicates:
            - Host=cart.mymall.com

server:
  port: 88


